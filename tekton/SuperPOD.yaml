apiVersion: tekton.dev/v1
kind: Pipeline
metadata:
  annotations:
  namespace: pipelines-cpiedraf
spec:
  params:
    - description: image to be enrooted
      name: IMAGE
      type: string
    - name : git-url
      type: string
      description: url of the git repo for the code of deployment
    - default: master
      description: revision to be used from repo of the code for deployment
      name: git-revision
      type: string
    - description: path to the Dockerfile
      name: CONTAINERFILE_PATH
      type: string
    - description: path to the subdirectory of the Dockerfile
      name: SUBDIRECTORY
      type: string
    - description: destination image url
      name: DESTINATION_IMAGE_URL
      type: string
  tasks:
    - name: fetch-repository
      params:
        - name: URL
          value: $(params.git-url)
        - name: SUBDIRECTORY
          value: ''
        - name: DELETE_EXISTING
          value: 'true'
        - name: REVISION
          value: $(params.git-revision)
      taskRef:
        params:
          - name: kind
            value: task
          - name: name
            value: git-clone
          - name: namespace
            value: openshift-pipelines
        resolver: cluster
      workspaces:
        - name: output
          workspace: shared-workspace
# Reference https://github.com/openshift-pipelines/task-containers/blob/main/docs/task-buildah.md
# hay que crear el secreto con las credenciales para el registry, v√©ase https://tekton.dev/docs/pipelines/auth/#configuring-docker-authentication-for-docker
    - name: build-image
      params:
        - name: IMAGE
          value: $(params.IMAGE)
        - name: CONTAINERFILE_PATH
          value: $(params.CONTAINERFILE_PATH)
        - name: SUBDIRECTORY
          value: $(params.SUBDIRECTORY)
        - name: TLS_VERIFY
          value: false
        - name: VERBOSE
          value: false
      runAfter:
        - fetch-repository
      taskRef:
        params:
          - name: kind
            value: task
          - name: name
            value: buildah
          - name: namespace
            value: openshift-pipelines
        resolver: cluster
      workspaces:
        - name: source
          workspace: shared-workspace
    - name: enroot-image
#### https://github.com/NVIDIA/enroot/blob/master/doc/usage.md
#### la URI de la imagen es diferente a la de buildah cuando se usa docker
      params:
        - name: IMAGE
          value: $(params.IMAGE)
      runAfter:
        - build-image
      taskRef:
      workspaces:
    - name: scp-and-run-image
      params:
      runAfter:
        - enroot-image
      taskRef:
      workspaces:
    - name: get-output
      params:
      runAfter:
        - scp-and-run-image
      taskRef:
      workspaces:
  workspaces:
    - name: shared-workspace
    - name: ssh-directory
